LibWalter v0.1

LibWalter is a code collection which aims to fill in the gaps in the BeOS API, released under the MIT license.

Below is a listing of all the classes included in the library and usage notes for each.

AutoTextControl
	BTextControl is simply inadequate for some purposes, such as sending update messages every time the user changes the text. AutoTextControl fixes this and is designed to be a drop-in replacement for BTextControl. You shouldn't need to call SetFilter, but the method is there should you need to do so. In addition to better change notification, AutoTextControl can set a limit on the number of characters in the text box, which is probably more often what you really want to do instead of limiting by byte count.

BarberPole
	When you want to show the user that your app is busy doing something and you can't get a total for a regular progress bar, you can use this class to show the user that your app is busy doing something and isn't just frozen. Set the colors with Set[High|Low]Color. The fancy style, which is the default, has a 3D kind of effect and the simple one is "flat". Note that if you use this class, you should also, if possible, provide the user another way to see progress, such as a BStringView which shows a numeric count or something.

BitmapButton
	Most people have a need for a button which has a picture on it at some point in time or another, and more often than not, they tend to just throw together some code to get the job done and little else. This class is a simple push button which can be disabled and shows keyboard focus. Note that it takes ownership of BBitmaps passed to it, so don't delete them.

BitmapListItem
BitmapMenuItem
	These are also quite handy to have around. Now you can have icons in your lists and menus. Just don't delete the BBitmaps you pass to them.

BitmapView
	This class is mostly meant to be able to show a picture with the right shape. It also comes with some whistles and bells which may come in handy in some instances. It can accept (or refuse) drops from ShowImage and Tracker. The user can paste in a picture from the clipboard. The BitmapView control can also resize dropped/pasted pictures (and keep the aspect ratio) so that they are no larger than a specified size. SetStyle allows you to have (or not have) a border around the image. It can also send a message to a target when the user modifies its picture by removing it or dropping/pasting a new picture into it. This class does NOT take ownership of bitmaps passed to it, so please take care to respond to these messages if you allow the user to change drop/paste images or you will have a memory leak on your hands.

ColorWell
	Now you have a simple BControl-based class which accepts color drops. Note that this class does not have its own color picker in order to allow you, the developer, the opportunity to customize color selection to your app.

If you do decide to implement a popup color picker for the ColorWell object in your app, there are some guidelines to follow for consistency's sake. Open the window on double-click. The Picker's window should be a regular window, and do not use an OK/Cancel/Apply button method -- clicking on a color in the picker should automatically update the ColorWell object in real time.

ComboBox
	For the longest time, BeOS has not had a dropdown list which works like Windows. We developers have had to make do with BMenuField, which is not an ideal substitution. This is the ComboBox class that has been floating around the Internet for years, but with bugfixes.

FontPanel
	There have been lots of ways to choose fonts in programs on BeOS. All of them stink because they lack the flexibility and consistency that a single font chooser window can offer. It works in a way similar to BFilePanel when it comes to behavior like hiding after clicking OK, the modification message, and so on.

PathBox
	This is merely a control, comprised of a BTextControl, a BButton, and a BFilePanel, which provides a simple way for a user to specify a path either by typing one in or browsing for one and optionally validating the user input for you.

Spinner
	A Spinner control is a combination of text box and vertical arrow buttons to increment and decrement numbers, such as the font size in the FontPanel. While Zeta has one, R5 and Haiku do not. This control provides cross-platform consistency and API simplicity.

SplitterView
	Many times have developers written a quick-and-dirty class to split a view into two child views and allow the user to move the divider. SplitterView is such a class, complete with a resize cursor when the user moves the mouse over it. The main view can be split into more than just 2 children -- 3 or more is possible and usage is simply through AddChild like any other BView.

TextFile
	Many times reading a text file one line at a time, is needed for one reason or another. This BFile-derived class adds one method: ReadLine(), which spits back the next \n terminated line using buffered disk access and removes the linefeed for you. Wildly convenient for reading config files. :-)

Toolbar
	BeOS misses a powerful and easy to use toolbar view. WToolbar aims to be a collection of classes that will make the most powerful
toolbar ever seen on BeOS-like operating systems! SVG, multi-level drop downs, detachable toolbars, tooltips, multi-line arrangement, various alignment, high apperance customizability, and many more features are in devlopment!
